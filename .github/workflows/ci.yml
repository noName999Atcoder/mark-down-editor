# CI/CDパイプラインの設定
# ビルドとテストを自動化するGitHub Actionsのワークフロー
name: Build and Test

# ワークフローのトリガー設定
# mainブランチへのプッシュとプルリクエスト時に実行
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # バックエンドのビルドジョブ
  build:
    runs-on: ubuntu-latest
    steps:
      # リポジトリのチェックアウト
      - uses: actions/checkout@v3

      # Goのセットアップ
      # バージョン1.21を使用
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      # Goアプリケーションのビルド
      - name: Build Go application
        run: go build -o main main.go

      # ビルド成果物のアップロード
      # 後続のジョブで使用可能にする
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: go-executable
          path: main

  # テスト実行ジョブ
  # バックエンドとフロントエンドの両方のテストを実行
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   # リポジトリのチェックアウト
  #   - uses: actions/checkout@v3

  #   # Goのセットアップ
  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.21'

  #   # バックエンドのテスト実行
  #   - name: Run Go tests
  #     run: go test -v ./...

  #   # Node.jsのセットアップ
  #   # フロントエンドのテスト実行に必要
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '18'

  #   # フロントエンドの依存関係インストール
  #   - name: Install frontend dependencies
  #     working-directory: ./frontend
  #     run: npm ci

  #   # フロントエンドのテスト実行
  #   - name: Run frontend tests
  #     working-directory: ./frontend
  #     run: npm test

  # 本番用ビルドジョブ
  # テストが成功した後に実行
  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #   # リポジトリのチェックアウト
  #   - uses: actions/checkout@v3

  #   # Goのセットアップ
  #   - name: Set up Go
  #     uses: actions/setup-go@v4
  #     with:
  #       go-version: '1.21'

  #   # バックエンドのビルド
  #   - name: Build Go application
  #     run: go build -o markdown-editor

  #   # Node.jsのセットアップ
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '18'

  #   # フロントエンドのビルド
  #   - name: Build frontend
  #     working-directory: ./frontend
  #     run: |
  #       npm ci
  #       npm run build

  #   # ビルド成果物のアップロード
  #   # バックエンドの実行ファイルとフロントエンドのビルド成果物を含む
  #   - name: Upload build artifacts
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: build-artifacts
  #       path: |
  #         markdown-editor
  #         frontend/dist
